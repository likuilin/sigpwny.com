import React from "react"
import { Link, useStaticQuery, graphql, navigate } from "gatsby"
import { StaticImage, getSrcSet, IGatsbyImageData } from "gatsby-plugin-image"

interface Frontmatter {
  title: string
  date_start: string
  date_end: string
  logo: {
    path: {
      childImageSharp: {
        gatsbyImageData: IGatsbyImageData
      }
    }
    alt: string
  }
  link: string
  stats: {
    participants: number
    teams: number
  }
}

interface Event {
  fileAbsolutePath: string
  parent: {
    sourceInstanceName: string
  }
  frontmatter: Frontmatter
}

interface MdxQuery {
  allEvents: {
    events: Event[]
  }
}

const EventCards = () => {
  const events: MdxQuery = useStaticQuery(graphql`
    query {
      allEvents: allMarkdownRemark(
        filter: {fileAbsolutePath: {glob: "**/events/**"}, frontmatter: {featured: {eq: true}}}
        sort: {fields: frontmatter___date_start, order: DESC}
      ) {
        events: nodes {
          fileAbsolutePath
          parent {
            ... on File {
              sourceInstanceName
            }
          }
          frontmatter {
            title
            date_start(formatString: "YYYY-MM-DD")
            date_end(formatString: "YYYY-MM-DD")
            logo {
              path {
                childImageSharp {
                  gatsbyImageData(width: 500, quality: 100)
                }
              }
              alt
            }
            link
            stats {
              participants
              teams
            }
          }
        }
      }
    }
  `)
  return (
    <div className="grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 gap-8">
      {events.allEvents.events.map((pwnyevent: Event) => (
        // <div key={meeting.fileAbsolutePath}>
        <Link to={`/${pwnyevent.parent.sourceInstanceName}/${pwnyevent.frontmatter.date_start}`} className="use-color-text">
          <div className="card h-100">
            <div className="aspect-ratio-16-9">
              {/* <StaticImage src={getSrcSet(event.frontmatter.logo.path)!} alt={event.frontmatter.logo.alt} /> */}
              {/* <StaticImage src={pwnyevent.frontmatter.logo.path.childImageSharp.gatsbyImageData} alt={pwnyevent.frontmatter.logo.alt} /> */}
            </div>
            <div className="p-2">
              <div className="card-line-clamp">
                <p className="font-monospace font-size-small m-0">
                </p>
                <p className="card-text">{pwnyevent.frontmatter.title}</p>
              </div>
            </div>
          </div>
        </Link>
      ))}
    </div>
  )
}

export default EventCards