name: Build site
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI_BRANCH: build
      CI_BUILD_DIR: public
      CI_COMMIT_MESSAGE: CI build artifacts for commit ${{ github.sha }}
      CI_COMMIT_AUTHOR_NAME: ${{ github.event.repository.name }} CI
      CI_COMMIT_AUTHOR_EMAIL: sigpwny-uiuc@users.noreply.github.com
    steps:
      - name: Check out main repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR_NAME }}"
          git config --global user.email "${{ env.CI_COMMIT_AUTHOR_EMAIL }}"
          git show-ref

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          # Uses node version defined in engines
          node-version-file: 'package.json'

      - name: Restore cached node modules and build artifacts
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
            ${{ env.CI_BUILD_DIR }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: (On cache miss) List the state of node modules
        continue-on-error: true
        run: npm list

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: (On cache miss) Install node modules
        continue-on-error: true
        run: npm ci

      - name: Install gatsby-cli
        run: npm install -g gatsby-cli

      - name: Build
        run: npm run build

      - if: github.event_name == 'push'
        name: Commit build artifacts to CI branch
        run: |
          git add --force "${{ env.CI_BUILD_DIR }}"
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push --force origin HEAD:${{ env.CI_BRANCH }}
